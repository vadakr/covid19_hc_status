/*
* Run this script as SA after choosing an appropriate password for the COV19HCSTAT login (line 18)
*/

use master
go

--database
IF DB_ID (N'covid19hcstatus') IS NOT NULL
DROP DATABASE covid19hcstatus
GO
CREATE DATABASE covid19hcstatus

--USER
CREATE LOGIN COV19HCSTAT WITH PASSWORD = 'cov19hcstat', CHECK_POLICY = OFF
go

GRANT VIEW SERVER STATE TO COV19HCSTAT
go

ALTER DATABASE covid19hcstatus SET READ_COMMITTED_SNAPSHOT ON
go

ALTER DATABASE covid19hcstatus SET ALLOW_SNAPSHOT_ISOLATION ON
go

--schema
USE covid19hcstatus
GO

CREATE USER COV19HCSTAT FOR LOGIN COV19HCSTAT WITH DEFAULT_SCHEMA = COV19HCSTAT
GO

CREATE SCHEMA COV19HCSTAT AUTHORIZATION COV19HCSTAT
go 

GRANT VIEW DATABASE STATE TO COV19HCSTAT
go

setuser
go

--CLEANUP
--FACILITY
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[FACILITY]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[FACILITY]
GO

--USER
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[USER]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[USER]
GO

--RESOURCE
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[RESOURCE]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[RESOURCE]
GO

--ROLE
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[ROLE]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[ROLE]
GO

--USERFACILITYROLE
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[USERFACILITYROLE_FK1]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [COV19HCSTAT].[USERFACILITYROLE] DROP CONSTRAINT USERFACILITYROLE_FK1
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[USERFACILITYROLE_FK2]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [COV19HCSTAT].[USERFACILITYROLE] DROP CONSTRAINT USERFACILITYROLE_FK2
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[USERFACILITYROLE_FK3]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [COV19HCSTAT].[USERFACILITYROLE] DROP CONSTRAINT USERFACILITYROLE_FK3
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[USERFACILITYROLE]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[USERFACILITYROLE]
GO

--SUPPLY
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[SUPPLY_FK1]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [COV19HCSTAT].[SUPPLY] DROP CONSTRAINT SUPPLY_FK1
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[SUPPLY_FK2]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [COV19HCSTAT].[SUPPLY] DROP CONSTRAINT SUPPLY_FK2
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[SUPPLY]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[SUPPLY]
GO

--DEMAND
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[DEMAND_FK1]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [COV19HCSTAT].[DEMAND] DROP CONSTRAINT DEMAND_FK1
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[DEMAND_FK2]') AND OBJECTPROPERTY(id, N'ISFOREIGNKEY') = 1)
ALTER TABLE [COV19HCSTAT].[DEMAND] DROP CONSTRAINT DEMAND_FK2
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[DEMAND]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[DEMAND]
GO

--SCHEMA_AUDIT
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[COV19HCSTAT].[SCHEMA_AUDIT]') AND OBJECTPROPERTY(id, N'ISUSERTABLE') = 1)
DROP TABLE [COV19HCSTAT].[SCHEMA_AUDIT]
GO

--SCHEMA_AUDIT
create table COV19HCSTAT.SCHEMA_AUDIT
(
    PK      BIGINT  IDENTITY
            CONSTRAINT SCHEMA_AUDIT_PK PRIMARY KEY,
    DATE    DATETIME NOT NULL,
    VERSION INT NOT NULL,
    NOTES   NVARCHAR(4000) NULL
)
go
CREATE INDEX SCHEMA_AUDIT_IDX1 ON COV19HCSTAT.SCHEMA_AUDIT (VERSION DESC)
go

INSERT INTO COV19HCSTAT.SCHEMA_AUDIT (VERSION, DATE) VALUES (100000, CURRENT_TIMESTAMP);
go


--CREATE
--FACILITY
create table COV19HCSTAT.FACILITY
(
    PK      BIGINT IDENTITY
            CONSTRAINT FACILITY_PK PRIMARY KEY,
    NAME    NVARCHAR(500)  NOT NULL,
    ADDR1   NVARCHAR(500)  NOT NULL,
    ADDR2   NVARCHAR(500)  NULL,
    ZIP     INT NOT NULL,
    COUNTY  NVARCHAR(500)  NULL,
    STATE   NVARCHAR(2) NOT NULL,
    CREATED DATETIME NULL,
    UPDATED DATETIME NULL
)
go
CREATE INDEX FACILITY_IDX1 ON COV19HCSTAT.FACILITY (NAME)
CREATE INDEX FACILITY_IDX2 ON COV19HCSTAT.FACILITY (ZIP)
CREATE INDEX FACILITY_IDX3 ON COV19HCSTAT.FACILITY (STATE)
go

--USER
create table COV19HCSTAT.USERS
(
    PK      BIGINT IDENTITY
            CONSTRAINT USER_PK PRIMARY KEY,
    LOGIN   NVARCHAR(50)  NOT NULL,
    LAST    NVARCHAR(250)  NOT NULL,
    FIRST   NVARCHAR(250)  NOT NULL,
    EMAIL   NVARCHAR(500)  NOT NULL,
    PHONE   NVARCHAR(15)  NOT NULL,
    SALT    NVARCHAR(500)  NOT NULL,
    HASH    NVARCHAR(500) NOT NULL,
    CREATED DATETIME NULL,
    UPDATED DATETIME NULL
)
go
CREATE UNIQUE INDEX USERS_UQ1 ON COV19HCSTAT.USERS (LOGIN)
CREATE INDEX USERS_IDX1 ON COV19HCSTAT.USERS (LAST)
CREATE INDEX USERS_IDX2 ON COV19HCSTAT.USERS (FIRST)
go

--RESOURCE
create table COV19HCSTAT.RESOURCE
(
    PK              BIGINT IDENTITY
                    CONSTRAINT RESOURCE_PK PRIMARY KEY,
    NAME            NVARCHAR(250)  NOT NULL,
    DESCRIPTION     TEXT  NULL,
    CREATED         DATETIME NULL,
    UPDATED         DATETIME NULL
)
go
CREATE UNIQUE INDEX RESOURCE_UQ1 ON COV19HCSTAT.RESOURCE (NAME)
go

--ROLE
create table COV19HCSTAT.ROLE
(
    PK              BIGINT IDENTITY
                    CONSTRAINT ROLE_PK PRIMARY KEY,
    NAME            NVARCHAR(250)  NOT NULL,
    DESCRIPTION     TEXT  NULL,
    VALUE           INT NOT NULL, -- a numeric value that proxies the role name (2^0, 2^1, 2^2 ...)
    CREATED         DATETIME NULL,
    UPDATED         DATETIME NULL
)
go
CREATE UNIQUE INDEX ROLE_UQ1 ON COV19HCSTAT.ROLE (NAME)
go

--SYSTEM -can add/remove users, facilities, resources, roles
INSERT INTO COV19HCSTAT.ROLE    (NAME, DESCRIPTION, VALUE, CREATED)
                    VALUES  ('SYSTEM', 'Access to the entire system', 1, CURRENT_TIMESTAMP);
go

--FACILITY_ADMIN -can add/remove users to/from a facility
INSERT INTO COV19HCSTAT.ROLE    (NAME, DESCRIPTION, VALUE, CREATED)
                    VALUES  ('FACILITY_ADMIN', 'Admin of a facility', 2, CURRENT_TIMESTAMP);
go

--FACILITY_SUPPLY -can modify a facility's supply
INSERT INTO COV19HCSTAT.ROLE    (NAME, DESCRIPTION, VALUE, CREATED)
                    VALUES  ('FACILITY_SUPPLY', 'Write access to a facility''s supply', 4, CURRENT_TIMESTAMP);
go

--FACILITY_DEMAND -can modify a facility's demand
INSERT INTO COV19HCSTAT.ROLE    (NAME, DESCRIPTION, VALUE, CREATED)
                    VALUES  ('FACILITY_DEMAND', 'Write access to a facility''s demand', 8, CURRENT_TIMESTAMP);
go

--USERFACILITYROLE
create table COV19HCSTAT.USERFACILITYROLE
(
    PK          BIGINT IDENTITY
                CONSTRAINT USERFACILITYROLE_PK PRIMARY KEY,
    USER_PK     BIGINT  NOT NULL,
    FACILITY_PK BIGINT  NOT NULL,
    ROLE_PK     BIGINT  NOT NULL,
    CREATED     DATETIME NULL,
    UPDATED     DATETIME NULL,
    AUDIT_USER  NVARCHAR(50) NOT NULL,

    CONSTRAINT USERFACILITYROLE_FK1 FOREIGN KEY (USER_PK)       REFERENCES COV19HCSTAT.USERS (PK),
    CONSTRAINT USERFACILITYROLE_FK2 FOREIGN KEY (FACILITY_PK)   REFERENCES COV19HCSTAT.FACILITY (PK),
    CONSTRAINT USERFACILITYROLE_FK3 FOREIGN KEY (ROLE_PK)       REFERENCES COV19HCSTAT.ROLE (PK)
)
go
CREATE INDEX USERFACILITYROLE_IDX1 ON COV19HCSTAT.USERFACILITYROLE (USER_PK)
CREATE INDEX USERFACILITYROLE_IDX2 ON COV19HCSTAT.USERFACILITYROLE (FACILITY_PK)
CREATE INDEX USERFACILITYROLE_IDX3 ON COV19HCSTAT.USERFACILITYROLE (ROLE_PK)
go

--SUPPLY
create table COV19HCSTAT.SUPPLY
(
    PK          BIGINT IDENTITY
                CONSTRAINT SUPPLY_PK PRIMARY KEY,
    RESOURCE_PK BIGINT  NOT NULL,
    FACILITY_PK BIGINT  NOT NULL,
    CAPACITY    BIGINT  NOT NULL,
    CREATED     DATETIME NULL,
    UPDATED     DATETIME NULL,
    AUDIT_USER  NVARCHAR(50) NOT NULL,

    CONSTRAINT SUPPLY_FK1 FOREIGN KEY (RESOURCE_PK)   REFERENCES COV19HCSTAT.RESOURCE (PK),
    CONSTRAINT SUPPLY_FK2 FOREIGN KEY (FACILITY_PK)   REFERENCES COV19HCSTAT.FACILITY (PK)
)
go
CREATE UNIQUE INDEX SUPPLY_UQ1 ON COV19HCSTAT.SUPPLY (RESOURCE_PK, FACILITY_PK) --one capacity per resource per facility
CREATE INDEX SUPPLY_IDX1 ON COV19HCSTAT.SUPPLY (RESOURCE_PK)
CREATE INDEX SUPPLY_IDX2 ON COV19HCSTAT.SUPPLY (FACILITY_PK)
go

--DEMAND
create table COV19HCSTAT.DEMAND
(
    PK          BIGINT IDENTITY
                CONSTRAINT DEMAND_PK PRIMARY KEY,
    RESOURCE_PK BIGINT  NOT NULL,
    FACILITY_PK BIGINT  NOT NULL,
    VOLUME      BIGINT  NOT NULL,
    CREATED     DATETIME NULL,
    UPDATED     DATETIME NULL,
    AUDIT_USER  NVARCHAR(50) NOT NULL,

    CONSTRAINT DEMAND_FK1 FOREIGN KEY (RESOURCE_PK)   REFERENCES COV19HCSTAT.RESOURCE (PK),
    CONSTRAINT DEMAND_FK2 FOREIGN KEY (FACILITY_PK)   REFERENCES COV19HCSTAT.FACILITY (PK)
)
go
CREATE UNIQUE INDEX DEMAND_UQ1 ON COV19HCSTAT.DEMAND (RESOURCE_PK, FACILITY_PK) --one volume per resource per facility
CREATE INDEX DEMAND_IDX1 ON COV19HCSTAT.DEMAND (RESOURCE_PK)
CREATE INDEX DEMAND_IDX2 ON COV19HCSTAT.DEMAND (FACILITY_PK)
go
